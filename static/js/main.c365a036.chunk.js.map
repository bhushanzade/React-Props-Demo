{"version":3,"sources":["assets/images/image 1.jpg","assets/images/image 2.jpg","assets/images/free2.jpg","assets/images/city1.jpg","assets/images/city2.jpg","assets/images/city3.jpg","assets/images/city4.jpg","components/home.js","components/demo.jsx","components/structure.jsx","components/props.jsx","components/header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","style","fontSize","href","target","PureComponent","Demo","Structure","src","Image1","alt","width","height","Image2","Props","data","image","name","address","marginTop","desc","multiple","map","res","key","Header","peoples","image1","multipleData","image2","image3","image4","image5","text","discription","_this2","react_router_dom","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","react_router","exact","path","component","render","components_props","assign","App","header","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8PCkCzBC,cA/BX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHEP,wEASf,OACIQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACC,SAAU,KAArB,0BAC2BL,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAD7C,qCAEsCF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,kCAAkCC,OAAO,UAAjD,UAFtC,IAE2GP,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAFjH,0CAG2CF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,yCAAyCC,OAAO,UAAxD,UAH3C,IAGuHP,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAH7H,mDAIoDF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,mCAAmCC,OAAO,UAAlD,UAJpD,uBAI6IP,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAJnJ,6EAK8EF,EAAAC,EAAAC,cAAA,WAL9E,sBAKuGF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,0EAA0EC,OAAO,UAAzF,UALvG,iEAKiRP,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WALvR,gDAlBDM,iBCiDJC,cAhDX,SAAAA,EAAYlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,IACfjB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgB,GAAAX,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHEP,wEASf,OACIQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,wBAKJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCAIJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,cAAYC,UAAU,gBAAtB,WACYH,EAAAC,EAAAC,cAAA,WADZ,4CAE6CF,EAAAC,EAAAC,cAAA,mDAF7C,IAEgGF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAFtG,WAGYF,EAAAC,EAAAC,cAAA,WAHZ,0CAKOF,EAAAC,EAAAC,cAAA,gDALP,IAKuDF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAL7D,YAMaF,EAAAC,EAAAC,cAAA,WANb,0CAO2CF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAPjD,WAQYF,EAAAC,EAAAC,cAAA,WARZ,kEASmEF,EAAAC,EAAAC,cAAA,WATnE,wBAUyBF,EAAAC,EAAAC,cAAA,WACrBF,EAAAC,EAAAC,cAAA,8CAXJ,IAWkDF,EAAAC,EAAAC,cAAA,WAXlD,sBAYuBF,EAAAC,EAAAC,cAAA,WACnBF,EAAAC,EAAAC,cAAA,8CAbJ,IAakDF,EAAAC,EAAAC,cAAA,WAblD,IAayDF,EAAAC,EAAAC,cAAA,WAbzD,WAcYF,EAAAC,EAAAC,cAAA,WAdZ,uBAewBF,EAAAC,EAAAC,cAAA,qBAxCzBM,mDC4CJE,mLAzCP,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,6BAKJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCAIJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2CACJF,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAQC,IAAI,GAAGC,MAAM,OAAOC,OAAO,QAdjD,IAc0Df,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAE3DF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,0JAIJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,2DAIJF,EAAAC,EAAAC,cAAA,OAAKS,IAAKK,IAAQH,IAAI,GAAGC,MAAM,OAAOC,OAAO,UA1BjD,IA0B4Df,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAC7DF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,wGAIJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,kCApCIM,iBCgETS,cAhEX,SAAAA,EAAY1B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACfzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAQf,OACIQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,qCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEU,MAAO,MAClCd,EAAAC,EAAAC,cAAA,OAAKS,IAAKhB,KAAKJ,MAAM2B,KAAKC,MAAON,IAAI,GAAGC,MAAM,QAC9Cd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcR,KAAKJ,MAAM2B,KAAKE,MAC5CpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAiCR,KAAKJ,MAAM2B,KAAKG,SAC/DrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,kGACAH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,aAAtB,aACAH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,aAAtB,mBAIZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACkB,UAAY,KAC3CtB,EAAAC,EAAAC,cAAA,UAAKP,KAAKJ,MAAMgC,UAKhCvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,kDAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVR,KAAKJ,MAAMiC,SAASC,IAAI,SAACC,EAAKC,GAAN,OACrB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEU,MAAO,MAClCd,EAAAC,EAAAC,cAAA,OAAKS,IAAKe,EAAIP,MAAON,IAAI,GAAGC,MAAM,QAClCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcuB,EAAIN,MAChCpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAiCuB,EAAIL,SACnDrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,kGACAH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,aAAtB,aACAH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,aAAtB,uBAOxBH,EAAAC,EAAAC,cAAA,mBA3DIM,sGCsFLoB,cA3EX,SAAAA,EAAYrC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KACDQ,MAAQ,CACT8B,QAAS,CACLT,KAAM,eACND,MAAOW,IACPT,QAAS,kBAGbU,aAAc,CAAC,CACXX,KAAM,SACND,MAAOa,IACPX,QAAS,eAEb,CACID,KAAM,QACND,MAAOc,IACPZ,QAAS,cAEb,CACID,KAAM,QACND,MAAOe,IACPb,QAAS,uBAEb,CACID,KAAM,QACND,MAAOgB,IACPd,QAAS,kBAGbe,KAAO,CACHC,YAAc,uPA/BP7C,wEAoCV,IAAA8C,EAAA3C,KACL,OACIK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKX,KAAKJ,MAAMiD,OACjDxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBsC,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B4C,GAAG,aACzC/C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMpC,UAAU,WAAW6C,GAAG,KAA9B,SAEJhD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMpC,UAAU,WAAW6C,GAAG,SAA9B,SAEJhD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMpC,UAAU,WAAW6C,GAAG,cAA9B,cAEJhD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMpC,UAAU,WAAW6C,GAAG,UAA9B,kBAKhBhD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9D,IACjCU,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAW3C,IAC/BT,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAW1C,IACpCV,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOE,KAAK,SAASE,OAAQ,SAAC9D,GAAD,OAAWS,EAAAC,EAAAC,cAACoD,EAAD7D,OAAA8D,OAAA,GAAWhE,EAAX,CAAkB2B,KAAMoB,EAAKvC,MAAM8B,QAASL,SAAUc,EAAKvC,MAAMgC,aAAcR,KAAMe,EAAKvC,MAAMqC,KAAKC,4BAnEhJ7B,iBCGNgD,MAXf,WAIE,OACExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuD,EAAD,CAAQjB,MAAM,2BCEAkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASV,OAAOrD,EAAAC,EAAAC,cAAC8D,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c365a036.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image 1.c94bc792.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image 2.ad9ce562.jpg\";","module.exports = __webpack_public_path__ + \"static/media/free2.ca318319.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city1.1f01dbba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city2.712bd67b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city3.569de895.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city4.ed613869.jpg\";","import React, { PureComponent } from 'react'\r\n\r\nclass Home extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron\">\r\n                    <h1> React Demo </h1>\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"jumbotron\">\r\n                    <p style={{fontSize: + '20'}}>\r\n                        How to install ReactJS <br /><br /><br /><br />\r\n                        Step 1: Download Nodejs from here <a href=\"https://nodejs.org/en/download/\" target=\"_blank\"> Link </a> <br /><br />\r\n                        Step 2: Download Visual Code from here <a href=\"https://code.visualstudio.com/download\" target=\"_blank\"> Link </a> <br /><br />\r\n                        Step 3: If you want github bash then click here <a href=\"https://git-scm.com/download/win\" target=\"_blank\"> Link </a>. Its not necessary.<br /><br />\r\n                        Step 4: Check node path is available in your system environment variable. <br /> If not click here <a href=\"https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/\" target=\"_blank\"> Link </a> to check how to set node path to system environment variable <br /><br />\r\n                        Step 5: click here for Routing Demo\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { PureComponent } from 'react'\r\n\r\nclass Demo extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron\">\r\n                    <h1>\r\n                        Demo Page\r\n                    </h1>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4>\r\n                        To create React App\r\n                    </h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"container\">\r\n                    <blockquote className=\"text-justify\">\r\n                        Step 1: <br/>\r\n                        To install React library/App use command <strong> npm install -g create-react-app </strong> <br /><br />\r\n                        Step 2: <br/>\r\n                            Use command for creating react app i.e.\r\n                           <strong> npx create-react-app app_name</strong> <br /><br />\r\n                        step 3 : <br/>\r\n                        open your created app in visual studio <br /><br />\r\n                        Step 4: <br/>\r\n                        Some prerequesting modules which need i.e. Bootstrap & Routing.<br />\r\n                        to install bootstrap <br />\r\n                        <strong>npm install bootstrap --save</strong> <br/>\r\n                        to install routing <br />\r\n                        <strong>npm install react-router-dom</strong> <br /> <br/>\r\n                        step 5: <br/>\r\n                        Go to Structure tab <br/>\r\n                    </blockquote>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demo","import React, { PureComponent } from 'react';\r\nimport Image1 from '../assets/images/image 1.jpg';\r\nimport Image2 from '../assets/images/image 2.jpg';\r\nclass Structure extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron\">\r\n                    <h1>\r\n                        Structure Page\r\n                </h1>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4>\r\n                        To create React App\r\n                </h4>\r\n                </div>\r\n                <br />\r\n                    <h5>Structure of Files in our app</h5>\r\n                <img src={Image1} alt=\"\" width=\"100%\" height=\"50%\" /> <br/><br/>\r\n\r\n                <div className=\"container\">\r\n                    <p>\r\n                        In above image we already see App.js file content. Under this file we use Header.jsx react file for root app. Other files we use as routing.\r\n                    </p>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <p>\r\n                        We use Routing in header.jsx file see example\r\n                    </p>\r\n                </div>\r\n                <img src={Image2} alt=\"\" width=\"100%\" height=\"700px\" /> <br/><br/>\r\n                <div className=\"container\">\r\n                    <p>\r\n                        Same as we use html view in Demo.jsx Home.jsx & Structure.jsx and design simple react app.\r\n                    </p>\r\n                </div>\r\n                <div className=\"jumbotron\">\r\n                    <h3>Thank You !</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Structure","import React, { PureComponent } from 'react';\r\n\r\nclass Props extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron\">\r\n                    <h2>Demo of props in React</h2>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3\">\r\n                            <div className=\"card\" style={{ width: + '300' }}>\r\n                                <img src={this.props.data.image} alt=\"\" width=\"300\" />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{this.props.data.name}</h5>\r\n                                    <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.data.address}</h6>\r\n                                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                    <a href=\"#\" className=\"card-link\">Card link</a>\r\n                                    <a href=\"#\" className=\"card-link\">Another link</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-1\">\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <div className=\"jumbotron\" style={{marginTop : + '40'}}>\r\n                                <h3>{this.props.desc}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"jumbotron\">\r\n                    <h4>Multiple list of cards using props.</h4>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {this.props.multiple.map((res, key) => (\r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\" style={{ width: + '300' }}>\r\n                                    <img src={res.image} alt=\"\" width=\"300\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{res.name}</h5>\r\n                                        <h6 className=\"card-subtitle mb-2 text-muted\">{res.address}</h6>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"card-link\">Card link</a>\r\n                                        <a href=\"#\" className=\"card-link\">Another link</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Props","import React, { PureComponent } from 'react';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Home from './home';\r\nimport Demo from './demo';\r\nimport Structure from './structure';\r\nimport Props from './props';\r\nimport image1 from '../assets/images/free2.jpg';\r\nimport image2 from '../assets/images/city1.jpg';\r\nimport image3 from '../assets/images/city2.jpg';\r\nimport image4 from '../assets/images/city3.jpg';\r\nimport image5 from '../assets/images/city4.jpg'\r\n\r\nclass Header extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            peoples: {\r\n                name: 'Bhushan Zade',\r\n                image: image1,\r\n                address: 'Nashik , Yeola'\r\n            },\r\n\r\n            multipleData: [{\r\n                name: 'London',\r\n                image: image2,\r\n                address: 'London , UK'\r\n            },\r\n            {\r\n                name: 'Paris',\r\n                image: image3,\r\n                address: 'Paris , UK'\r\n            },\r\n            {\r\n                name: 'Dubai',\r\n                image: image4,\r\n                address: 'Middle East , Dubai'\r\n            },\r\n            {\r\n                name: 'Seuol',\r\n                image: image5,\r\n                address: 'Koria , Koria'\r\n            }],\r\n\r\n            text : {\r\n                discription : 'The main difference between state and props is that props are immutable. This is why the container component should define the state that can be updated and changed, while the child components should only pass data from the state using props.'\r\n            }\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <a className=\"navbar-brand\" href=\"#\">{this.props.title}</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item active\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/Demo\">Demo</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/Structure\">Structure</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/Props\">Props Demo</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <div>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/Demo\" component={Demo} />\r\n                        <Route path=\"/Structure\" component={Structure} />\r\n                        <Route path=\"/Props\" render={(props) => <Props {...props} data={this.state.peoples} multiple={this.state.multipleData} desc={this.state.text.discription} />} />\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport Header from './components/header';\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <Header title=\"Timeline using Props\"/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}